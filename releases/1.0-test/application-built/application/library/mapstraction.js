/**
 * Adds a Tile Layer to the map
 *
 * Requires providing a parameterized tile url. Use {Z}, {X}, and {Y} to specify where the parameters
 *  should go in the URL.
 *
 * For example, the OpenStreetMap tiles are:
 *  m.addTileLayer("http://tile.openstreetmap.org/{Z}/{X}/{Y}.png", 1.0, "OSM", 1, 19, true);
 *
 * @param {tile_url} template url of the tiles.
 * @param {opacity} opacity of the tile layer - 0 is transparent, 1 is opaque. (default=0.6)
 * @param {copyright_text} copyright text to use for the tile layer. (default=Mapstraction)
 * @param {min_zoom} Minimum (furtherest out) zoom level that tiles are available (default=1)
 * @param {max_zoom} Maximum (closest) zoom level that the tiles are available (default=18)
 * @param {map_type} Should the tile layer be a selectable map type in the layers palette (default=false)
 */

(function(){var providers=null,modules="core",scriptBase,scripts=document.getElementsByTagName("script");for(var i=0;i<scripts.length;i++){var match=scripts[i].src.replace(/%20/g,"").match(/^(.*?)mxn\.js(\?\(\[?(.*?)\]?\))?$/);if(match!==null){scriptBase=match[1];if(match[3]){var settings=match[3].split(",[");providers=settings[0].replace("]",""),settings[1]&&(modules+=","+settings[1])}break}}if(providers===null||providers=="none")return;providers=providers.replace(/ /g,"").split(","),modules=modules.replace(/ /g,"").split(",");var scriptTagStart='<script type="text/javascript" src="'+scriptBase+"mxn.",scriptTagEnd='.js"></script>',scriptsAry=[];for(i=0;i<modules.length;i++){scriptsAry.push(scriptTagStart+modules[i]+scriptTagEnd);for(var j=0;j<providers.length;j++)scriptsAry.push(scriptTagStart+providers[j]+"."+modules[i]+scriptTagEnd)}document.write(scriptsAry.join(""))})(),function(){var apis={},invoke=function(sApiId,sObjName,sFnName,oScope,args){if(!hasImplementation(sApiId,sObjName,sFnName))throw"Method "+sFnName+" of object "+sObjName+" is not supported by API "+sApiId+". Are you missing a script tag?";if(typeof apis[sApiId][sObjName].deferrable=="undefined"||apis[sApiId][sObjName].deferrable[sFnName]!==!0)return apis[sApiId][sObjName][sFnName].apply(oScope,args);mxn.deferUntilLoaded.call(oScope,function(){return apis[sApiId][sObjName][sFnName].apply(oScope,args)})},hasImplementation=function(sApiId,sObjName,sFnName){if(typeof apis[sApiId]=="undefined")throw"API "+sApiId+" not loaded. Are you missing a script tag?";if(typeof apis[sApiId][sObjName]=="undefined")throw"Object definition "+sObjName+" in API "+sApiId+" not loaded. Are you missing a script tag?";return typeof apis[sApiId][sObjName][sFnName]=="function"},mxn=window.mxn={register:function(sApiId,oApiImpl){apis.hasOwnProperty(sApiId)||(apis[sApiId]={}),mxn.util.merge(apis[sApiId],oApiImpl)},addProxyMethods:function(func,aryMethods,bWithApiArg){for(var i=0;i<aryMethods.length;i++){var sMethodName=aryMethods[i];bWithApiArg?func.prototype[sMethodName]=new Function("return this.invoker.go('"+sMethodName+"', arguments, { overrideApi: true } );"):func.prototype[sMethodName]=new Function("return this.invoker.go('"+sMethodName+"', arguments);")}},checkLoad:function(funcDetails){if(this.loaded[this.api]===!1){var scope=this;return this.onload[this.api].push(function(){funcDetails.callee.apply(scope,funcDetails)}),!0}return!1},deferUntilLoaded:function(fnCall){if(this.loaded[this.api]===!1){var scope=this;this.onload[this.api].push(fnCall)}else fnCall.call(this)},addEvents:function(oEvtSrc,aEvtNames){for(var i=0;i<aEvtNames.length;i++){var sEvtName=aEvtNames[i];if(sEvtName in oEvtSrc)throw"Event or method "+sEvtName+" already declared.";oEvtSrc[sEvtName]=new mxn.Event(sEvtName,oEvtSrc)}}};mxn.Event=function(sEvtName,oEvtSource){var handlers=[];if(!sEvtName)throw"Event name must be provided";this.addHandler=function(fn,ctx){handlers.push({context:ctx,handler:fn})},this.removeHandler=function(fn,ctx){for(var i=0;i<handlers.length;i++)handlers[i].handler==fn&&handlers[i].context==ctx&&handlers.splice(i,1)},this.removeAllHandlers=function(){handlers=[]},this.fire=function(oEvtArgs){var args=[sEvtName,oEvtSource,oEvtArgs];for(var i=0;i<handlers.length;i++)handlers[i].handler.apply(handlers[i].context,args)}},mxn.Invoker=function(aobj,asClassName,afnApiIdGetter){var obj=aobj,sClassName=asClassName,fnApiIdGetter=afnApiIdGetter,defOpts={overrideApi:!1,context:null,fallback:null};this.go=function(sMethodName,args,oOptions){args=Array.prototype.slice.apply(args),typeof oOptions=="undefined"&&(oOptions=defOpts);var sApiId;oOptions.overrideApi?sApiId=args.shift():sApiId=fnApiIdGetter.apply(obj);if(typeof sApiId!="string")throw"API ID not available.";return typeof oOptions.context!="undefined"&&oOptions.context!==null&&args.push(oOptions.context),typeof oOptions.fallback=="function"&&!hasImplementation(sApiId,sClassName,sMethodName)?oOptions.fallback.apply(obj,args):invoke(sApiId,sClassName,sMethodName,obj,args)}},mxn.util={merge:function(oRecv,oGive){for(var sPropName in oGive)oGive.hasOwnProperty(sPropName)&&(oRecv.hasOwnProperty(sPropName)?mxn.util.merge(oRecv[sPropName],oGive[sPropName]):oRecv[sPropName]=oGive[sPropName])},$m:function(){var elements=[];for(var i=0;i<arguments.length;i++){var element=arguments[i];typeof element=="string"&&(element=document.getElementById(element));if(arguments.length==1)return element;elements.push(element)}return elements},loadScript:function(src,callback){var script=document.createElement("script");script.type="text/javascript",script.src=src;if(callback)if(script.addEventListener)script.addEventListener("load",callback,!0);else if(script.attachEvent){var done=!1;script.attachEvent("onreadystatechange",function(){!done&&document.readyState==="complete"&&(done=!0,callback())})}var h=document.getElementsByTagName("head")[0];h.appendChild(script);return},convertLatLonXY_Yahoo:function(point,level){var size=1<<26-level,pixel_per_degree=size/360,pixel_per_radian=size/(2*Math.PI),origin=new YCoordPoint(size/2,size/2),answer=new YCoordPoint;answer.x=Math.floor(origin.x+point.lon*pixel_per_degree);var sin=Math.sin(point.lat*Math.PI/180);return answer.y=Math.floor(origin.y+.5*Math.log((1+sin)/(1-sin))*-pixel_per_radian),answer},loadStyle:function(href){var link=document.createElement("link");link.type="text/css",link.rel="stylesheet",link.href=href,document.getElementsByTagName("head")[0].appendChild(link);return},getStyle:function(el,prop){var y;return el.currentStyle?y=el.currentStyle[prop]:window.getComputedStyle&&(y=window.getComputedStyle(el,"").getPropertyValue(prop)),y},lonToMetres:function(lon,lat){return lon*111200*Math.cos(lat*(Math.PI/180))},metresToLon:function(m,lat){return m/(111200*Math.cos(lat*(Math.PI/180)))},KMToMiles:function(km){return km/1.609344},milesToKM:function(miles){return miles*1.609344},getDegreesFromGoogleZoomLevel:function(pixels,zoom){return 360*pixels/Math.pow(2,zoom+8)},getGoogleZoomLevelFromDegrees:function(pixels,degrees){return mxn.util.logN(360*pixels/degrees,2)-8},logN:function(number,base){return Math.log(number)/Math.log(base)},getAvailableProviders:function(){var providers=[];for(var propertyName in apis)apis.hasOwnProperty(propertyName)&&providers.push(propertyName);return providers},stringFormat:function(strIn){var replaceRegEx=/\{\d+\}/g,args=Array.slice.apply(arguments);return args.shift(),strIn.replace(replaceRegEx,function(strVal){var num=strVal.slice(1,-1);return args[num]})}},mxn.util.Color=function(){arguments.length==3?(this.red=arguments[0],this.green=arguments[1],this.blue=arguments[2]):arguments.length==1&&this.setHexColor(arguments[0])},mxn.util.Color.prototype.reHex=/^#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$/,mxn.util.Color.prototype.setHexColor=function(strHexColor){var match=strHexColor.match(this.reHex);if(!match)throw"Invalid HEX color format, expected #000, 000, #000000 or 000000";strHexColor=match[1],strHexColor.length==3&&(strHexColor=strHexColor.replace(/\w/g,function(str){return str.concat(str)})),this.red=parseInt(strHexColor.substr(0,2),16),this.green=parseInt(strHexColor.substr(2,2),16),this.blue=parseInt(strHexColor.substr(4,2),16)},mxn.util.Color.prototype.getHexColor=function(){var rgb=this.blue|this.green<<8|this.red<<16,hexString=rgb.toString(16).toUpperCase();return hexString.length<6&&(hexString="0"+hexString),"#"+hexString}}(),function(){var $m=mxn.util.$m,init=function(){this.invoker.go("init",[this.currentElement,this.api]),this.applyOptions()},Mapstraction=mxn.Mapstraction=function(element,api,debug){api||(api=mxn.util.getAvailableProviders()[0]),this.api=api,this.maps={},this.currentElement=$m(element),this.eventListeners=[],this.markers=[],this.layers=[],this.polylines=[],this.images=[],this.controls=[],this.loaded={},this.onload={},this.onload[api]=[],this.element=element,this.options={enableScrollWheelZoom:!1,enableDragging:!0},this.addControlsArgs={},this.invoker=new mxn.Invoker(this,"Mapstraction",function(){return this.api}),mxn.addEvents(this,["load","click","endPan","changeZoom","markerAdded","markerRemoved","polylineAdded","polylineRemoved"]),init.apply(this)};Mapstraction.ROAD=1,Mapstraction.SATELLITE=2,Mapstraction.HYBRID=3,Mapstraction.PHYSICAL=4,mxn.addProxyMethods(Mapstraction,["addLargeControls","addMapTypeControls","addOverlay","addSmallControls","applyOptions","getBounds","getCenter","getMapType","getPixelRatio","getZoom","getZoomLevelForBoundingBox","mousePosition","resizeTo","setBounds","setCenter","setCenterAndZoom","setMapType","setZoom","toggleTileLayer"]),Mapstraction.prototype.setOptions=function(oOpts){mxn.util.merge(this.options,oOpts),this.applyOptions()},Mapstraction.prototype.setOption=function(sOptName,vVal){this.options[sOptName]=vVal,this.applyOptions()},Mapstraction.prototype.enableScrollWheelZoom=function(){this.setOption("enableScrollWheelZoom",!0)},Mapstraction.prototype.dragging=function(on){this.setOption("enableDragging",on)},Mapstraction.prototype.swap=function(element,api){if(this.api===api)return;var center=this.getCenter(),zoom=this.getZoom();this.currentElement.style.visibility="hidden",this.currentElement.style.display="none",this.currentElement=$m(element),this.currentElement.style.visibility="visible",this.currentElement.style.display="block",this.api=api,this.onload[api]=[];if(this.maps[this.api]===undefined){init.apply(this);for(var i=0;i<this.markers.length;i++)this.addMarker(this.markers[i],!0);for(var j=0;j<this.polylines.length;j++)this.addPolyline(this.polylines[j],!0);this.setCenterAndZoom(center,zoom)}else this.setCenterAndZoom(center,zoom);this.addControls(this.addControlsArgs)},Mapstraction.prototype.isLoaded=function(api){return api===null&&(api=this.api),this.loaded[api]},Mapstraction.prototype.setDebug=function(debug){return debug!==null&&(this.debug=debug),this.debug},Mapstraction.prototype.setDefer=function(deferred){this.loaded[this.api]=!deferred},Mapstraction.prototype.runDeferred=function(){while(this.onload[this.api].length>0)this.onload[this.api].shift().apply(this)},Mapstraction.prototype.clickHandler=function(lat,lon,me){this.callEventListeners("click",{location:new LatLonPoint(lat,lon)})},Mapstraction.prototype.moveendHandler=function(me){this.callEventListeners("moveend",{})},Mapstraction.prototype.addEventListener=function(){var listener={};listener.event_type=arguments[0],listener.callback_function=arguments[1],arguments.length==3?(listener.back_compat_mode=!1,listener.callback_object=arguments[2]):(listener.back_compat_mode=!0,listener.callback_object=null),this.eventListeners.push(listener)},Mapstraction.prototype.callEventListeners=function(sEventType,oEventArgs){oEventArgs.source=this;for(var i=0;i<this.eventListeners.length;i++){var evLi=this.eventListeners[i];if(evLi.event_type==sEventType)if(evLi.back_compat_mode)evLi.event_type=="click"?evLi.callback_function(oEventArgs.location):evLi.callback_function();else{var scope=evLi.callback_object||this;evLi.callback_function.call(scope,oEventArgs)}}},Mapstraction.prototype.addControls=function(args){this.addControlsArgs=args,this.invoker.go("addControls",arguments)},Mapstraction.prototype.addMarker=function(marker,old){marker.mapstraction=this,marker.api=this.api,marker.location.api=this.api,marker.map=this.maps[this.api];var propMarker=this.invoker.go("addMarker",arguments);marker.setChild(propMarker),old||this.markers.push(marker),this.markerAdded.fire({marker:marker})},Mapstraction.prototype.addMarkerWithData=function(marker,data){marker.addData(data),this.addMarker(marker)},Mapstraction.prototype.addPolylineWithData=function(polyline,data){polyline.addData(data),this.addPolyline(polyline)},Mapstraction.prototype.removeMarker=function(marker){var current_marker;for(var i=0;i<this.markers.length;i++){current_marker=this.markers[i];if(marker==current_marker){this.invoker.go("removeMarker",arguments),marker.onmap=!1,this.markers.splice(i,1),this.markerRemoved.fire({marker:marker});break}}},Mapstraction.prototype.removeAllMarkers=function(){var current_marker;while(this.markers.length>0)current_marker=this.markers.pop(),this.invoker.go("removeMarker",[current_marker])},Mapstraction.prototype.declutterMarkers=function(opts){if(this.loaded[this.api]===!1){var me=this;this.onload[this.api].push(function(){me.declutterMarkers(opts)});return}var map=this.maps[this.api];switch(this.api){case"multimap":map.declutterGroup(opts.groupName);break;case"  dummy":break;default:this.debug&&alert(this.api+" not supported by Mapstraction.declutterMarkers")}},Mapstraction.prototype.addPolyline=function(polyline,old){polyline.api=this.api,polyline.map=this.maps[this.api];var propPoly=this.invoker.go("addPolyline",arguments);polyline.setChild(propPoly),old||this.polylines.push(polyline),this.polylineAdded.fire({polyline:polyline})};var removePolylineImpl=function(polyline){this.invoker.go("removePolyline",arguments),polyline.onmap=!1,this.polylineRemoved.fire({polyline:polyline})};Mapstraction.prototype.removePolyline=function(polyline){var current_polyline;for(var i=0;i<this.polylines.length;i++){current_polyline=this.polylines[i];if(polyline==current_polyline){this.polylines.splice(i,1),removePolylineImpl.call(this,polyline);break}}},Mapstraction.prototype.removeAllPolylines=function(){var current_polyline;while(this.polylines.length>0)current_polyline=this.polylines.pop(),removePolylineImpl.call(this,current_polyline)},Mapstraction.prototype.autoCenterAndZoom=function(){var lat_max=-90,lat_min=90,lon_max=-180,lon_min=180,lat,lon,checkMinMax=function(){lat>lat_max&&(lat_max=lat),lat<lat_min&&(lat_min=lat),lon>lon_max&&(lon_max=lon),lon<lon_min&&(lon_min=lon)};for(var i=0;i<this.markers.length;i++)lat=this.markers[i].location.lat,lon=this.markers[i].location.lon,checkMinMax();for(i=0;i<this.polylines.length;i++)for(var j=0;j<this.polylines[i].points.length;j++)lat=this.polylines[i].points[j].lat,lon=this.polylines[i].points[j].lon,checkMinMax();this.setBounds(new BoundingBox(lat_min,lon_min,lat_max,lon_max))},Mapstraction.prototype.centerAndZoomOnPoints=function(points){var bounds=new BoundingBox(points[0].lat,points[0].lon,points[0].lat,points[0].lon);for(var i=1,len=points.length;i<len;i++)bounds.extend(points[i]);this.setBounds(bounds)},Mapstraction.prototype.visibleCenterAndZoom=function(){var lat_max=-90,lat_min=90,lon_max=-180,lon_min=180,lat,lon,checkMinMax=function(){lat>lat_max&&(lat_max=lat),lat<lat_min&&(lat_min=lat),lon>lon_max&&(lon_max=lon),lon<lon_min&&(lon_min=lon)};for(var i=0;i<this.markers.length;i++)this.markers[i].getAttribute("visible")&&(lat=this.markers[i].location.lat,lon=this.markers[i].location.lon,checkMinMax());for(i=0;i<this.polylines.length;i++)if(this.polylines[i].getAttribute("visible"))for(j=0;j<this.polylines[i].points.length;j++)lat=this.polylines[i].points[j].lat,lon=this.polylines[i].points[j].lon,checkMinMax();this.setBounds(new BoundingBox(lat_min,lon_min,lat_max,lon_max))},Mapstraction.prototype.polylineCenterAndZoom=function(radius){var lat_max=-90,lat_min=90,lon_max=-180,lon_min=180;for(var i=0;i<mapstraction.polylines.length;i++)for(var j=0;j<mapstraction.polylines[i].points.length;j++)lat=mapstraction.polylines[i].points[j].lat,lon=mapstraction.polylines[i].points[j].lon,latConv=lonConv=radius,radius>0&&(latConv=radius/mapstraction.polylines[i].points[j].latConv(),lonConv=radius/mapstraction.polylines[i].points[j].lonConv()),lat+latConv>lat_max&&(lat_max=lat+latConv),lat-latConv<lat_min&&(lat_min=lat-latConv),lon+lonConv>lon_max&&(lon_max=lon+lonConv),lon-lonConv<lon_min&&(lon_min=lon-lonConv);this.setBounds(new BoundingBox(lat_min,lon_min,lat_max,lon_max))},Mapstraction.prototype.addImageOverlay=function(id,src,opacity,west,south,east,north){var b=document.createElement("img");b.style.display="block",b.setAttribute("id",id),b.setAttribute("src",src),b.style.position="absolute",b.style.zIndex=1,b.setAttribute("west",west),b.setAttribute("south",south),b.setAttribute("east",east),b.setAttribute("north",north);var oContext={imgElm:b};this.invoker.go("addImageOverlay",arguments,{context:oContext})},Mapstraction.prototype.setImageOpacity=function(id,opacity){opacity<0&&(opacity=0),opacity>=100&&(opacity=100);var c=opacity/100,d=document.getElementById(id);typeof d.style.filter=="string"&&(d.style.filter="alpha(opacity:"+opacity+")"),typeof d.style.KHTMLOpacity=="string"&&(d.style.KHTMLOpacity=c),typeof d.style.MozOpacity=="string"&&(d.style.MozOpacity=c),typeof d.style.opacity=="string"&&(d.style.opacity=c)},Mapstraction.prototype.setImagePosition=function(id){var imgElement=document.getElementById(id),oContext={latLng:{top:imgElement.getAttribute("north"),left:imgElement.getAttribute("west"),bottom:imgElement.getAttribute("south"),right:imgElement.getAttribute("east")},pixels:{top:0,right:0,bottom:0,left:0}};this.invoker.go("setImagePosition",arguments,{context:oContext}),imgElement.style.top=oContext.pixels.top.toString()+"px",imgElement.style.left=oContext.pixels.left.toString()+"px",imgElement.style.width=(oContext.pixels.right-oContext.pixels.left).toString()+"px",imgElement.style.height=(oContext.pixels.bottom-oContext.pixels.top).toString()+"px"},Mapstraction.prototype.addJSON=function(json){var features;typeof json=="string"?features=eval("("+json+")"):features=json,features=features.features;var map=this.maps[this.api],html="",item,polyline,marker,markers=[];features.type=="FeatureCollection"&&this.addJSON(features.features);for(var i=0;i<features.length;i++){item=features[i];switch(item.geometry.type){case"Point":html="<strong>"+item.title+"</strong><p>"+item.description+"</p>",marker=new Marker(new LatLonPoint(item.geometry.coordinates[1],item.geometry.coordinates[0])),markers.push(marker),this.addMarkerWithData(marker,{infoBubble:html,label:item.title,date:'new Date("'+item.date+'")',iconShadow:item.icon_shadow,marker:item.id,iconShadowSize:item.icon_shadow_size,icon:"http://boston.openguides.org/markers/AQUA.png",iconSize:item.icon_size,category:item.source_id,draggable:!1,hover:!1});break;case"Polygon":var points=[];polyline=new Polyline(points),mapstraction.addPolylineWithData(polyline,{fillColor:item.poly_color,date:'new Date("'+item.date+'")',category:item.source_id,width:item.line_width,opacity:item.line_opacity,color:item.line_color,polygon:!0}),markers.push(polyline);break;default:}}return markers},Mapstraction.prototype.addTileLayer=function(tile_url,opacity,copyright_text,min_zoom,max_zoom,map_type){if(!tile_url)return;return this.tileLayers=this.tileLayers||[],opacity=opacity||.6,copyright_text=copyright_text||"Mapstraction",min_zoom=min_zoom||1,max_zoom=max_zoom||18,map_type=map_type||!1,this.invoker.go("addTileLayer",[tile_url,opacity,copyright_text,min_zoom,max_zoom,map_type])},Mapstraction.prototype.addFilter=function(field,operator,value){this.filters||(this.filters=[]),this.filters.push([field,operator,value])},Mapstraction.prototype.removeFilter=function(field,operator,value){if(!this.filters)return;var del;for(var f=0;f<this.filters.length;f++)this.filters[f][0]==field&&(!operator||this.filters[f][1]==operator&&this.filters[f][2]==value)&&(this.filters.splice(f,1),f--)},Mapstraction.prototype.toggleFilter=function(field,operator,value){this.filters||(this.filters=[]);var found=!1;for(var f=0;f<this.filters.length;f++)this.filters[f][0]==field&&this.filters[f][1]==operator&&this.filters[f][2]==value&&(this.filters.splice(f,1),f--,found=!0);found||this.addFilter(field,operator,value)},Mapstraction.prototype.removeAllFilters=function(){this.filters=[]},Mapstraction.prototype.doFilter=function(showCallback,hideCallback){var map=this.maps[this.api],visibleCount=0,f;if(this.filters)switch(this.api){case"multimap":var mmfilters=[];for(f=0;f<this.filters.length;f++)mmfilters.push(new MMSearchFilter(this.filters[f][0],this.filters[f][1],this.filters[f][2]));map.setMarkerFilters(mmfilters),map.redrawMap();break;case"  dummy":break;default:var vis;for(var m=0;m<this.markers.length;m++){vis=!0;for(f=0;f<this.filters.length;f++)this.applyFilter(this.markers[m],this.filters[f])||(vis=!1);vis?(visibleCount++,showCallback?showCallback(this.markers[m]):this.markers[m].show()):hideCallback?hideCallback(this.markers[m]):this.markers[m].hide(),this.markers[m].setAttribute("visible",vis)}}return visibleCount},Mapstraction.prototype.applyFilter=function(o,f){var vis=!0;switch(f[1]){case"ge":o.getAttribute(f[0])<f[2]&&(vis=!1);break;case"le":o.getAttribute(f[0])>f[2]&&(vis=!1);break;case"eq":o.getAttribute(f[0])==f[2]&&(vis=!1)}return vis},Mapstraction.prototype.getAttributeExtremes=function(field){var min,max;for(var m=0;m<this.markers.length;m++){if(!min||min>this.markers[m].getAttribute(field))min=this.markers[m].getAttribute(field);if(!max||max<this.markers[m].getAttribute(field))max=this.markers[m].getAttribute(field)}for(var p=0;m<this.polylines.length;m++){if(!min||min>this.polylines[p].getAttribute(field))min=this.polylines[p].getAttribute(field);if(!max||max<this.polylines[p].getAttribute(field))max=this.polylines[p].getAttribute(field)}return[min,max]},Mapstraction.prototype.getMap=function(){return this.maps[this.api]};var LatLonPoint=mxn.LatLonPoint=function(lat,lon){this.lat=lat,this.lon=lon,this.lng=lon,this.invoker=new mxn.Invoker(this,"LatLonPoint")};mxn.addProxyMethods(LatLonPoint,["fromProprietary","toProprietary"],!0),LatLonPoint.prototype.toString=function(){return this.lat+", "+this.lon},LatLonPoint.prototype.distance=function(otherPoint){var rads=Math.PI/180,diffLat=(this.lat-otherPoint.lat)*rads,diffLon=(this.lon-otherPoint.lon)*rads,a=Math.sin(diffLat/2)*Math.sin(diffLat/2)+Math.cos(this.lat*rads)*Math.cos(otherPoint.lat*rads)*Math.sin(diffLon/2)*Math.sin(diffLon/2);return 2*Math.atan2(Math.sqrt(a),Math.sqrt(1-a))*6371},LatLonPoint.prototype.equals=function(otherPoint){return this.lat==otherPoint.lat&&this.lon==otherPoint.lon},LatLonPoint.prototype.latConv=function(){return this.distance(new LatLonPoint(this.lat+.1,this.lon))*10},LatLonPoint.prototype.lonConv=function(){return this.distance(new LatLonPoint(this.lat,this.lon+.1))*10};var BoundingBox=mxn.BoundingBox=function(swlat,swlon,nelat,nelon){this.sw=new LatLonPoint(swlat,swlon),this.ne=new LatLonPoint(nelat,nelon)};BoundingBox.prototype.getSouthWest=function(){return this.sw},BoundingBox.prototype.getNorthEast=function(){return this.ne},BoundingBox.prototype.isEmpty=function(){return this.ne==this.sw},BoundingBox.prototype.contains=function(point){return point.lat>=this.sw.lat&&point.lat<=this.ne.lat&&point.lon>=this.sw.lon&&point.lon<=this.ne.lon},BoundingBox.prototype.toSpan=function(){return new LatLonPoint(Math.abs(this.sw.lat-this.ne.lat),Math.abs(this.sw.lon-this.ne.lon))},BoundingBox.prototype.extend=function(point){this.sw.lat>point.lat&&(this.sw.lat=point.lat),this.sw.lon>point.lon&&(this.sw.lon=point.lon),this.ne.lat<point.lat&&(this.ne.lat=point.lat),this.ne.lon<point.lon&&(this.ne.lon=point.lon);return};var Marker=mxn.Marker=function(point){this.api=null,this.location=point,this.onmap=!1,this.proprietary_marker=!1,this.attributes=[],this.invoker=new mxn.Invoker(this,"Marker",function(){return this.api}),mxn.addEvents(this,["openInfoBubble","closeInfoBubble","click"])};mxn.addProxyMethods(Marker,["fromProprietary","hide","openBubble","show","toProprietary","update"]),Marker.prototype.setChild=function(some_proprietary_marker){this.proprietary_marker=some_proprietary_marker,some_proprietary_marker.mapstraction_marker=this,this.onmap=!0},Marker.prototype.setLabel=function(labelText){this.labelText=labelText},Marker.prototype.addData=function(options){for(var sOptKey in options)if(options.hasOwnProperty(sOptKey))switch(sOptKey){case"label":this.setLabel(options.label);break;case"infoBubble":this.setInfoBubble(options.infoBubble);break;case"icon":options.iconSize&&options.iconAnchor?this.setIcon(options.icon,options.iconSize,options.iconAnchor):options.iconSize?this.setIcon(options.icon,options.iconSize):this.setIcon(options.icon);break;case"iconShadow":options.iconShadowSize?this.setShadowIcon(options.iconShadow,[options.iconShadowSize[0],options.iconShadowSize[1]]):this.setIcon(options.iconShadow);break;case"infoDiv":this.setInfoDiv(options.infoDiv[0],options.infoDiv[1]);break;case"draggable":this.setDraggable(options.draggable);break;case"hover":this.setHover(options.hover),this.setHoverIcon(options.hoverIcon);break;case"hoverIcon":this.setHoverIcon(options.hoverIcon);break;case"openBubble":this.openBubble();break;case"groupName":this.setGroupName(options.groupName);break;default:this.setAttribute(sOptKey,options[sOptKey])}},Marker.prototype.setInfoBubble=function(infoBubble){this.infoBubble=infoBubble},Marker.prototype.setInfoDiv=function(infoDiv,div){this.infoDiv=infoDiv,this.div=div},Marker.prototype.setIcon=function(iconUrl,iconSize,iconAnchor){this.iconUrl=iconUrl,iconSize&&(this.iconSize=iconSize),iconAnchor&&(this.iconAnchor=iconAnchor)},Marker.prototype.setIconSize=function(iconSize){iconSize&&(this.iconSize=iconSize)},Marker.prototype.setIconAnchor=function(iconAnchor){iconAnchor&&(this.iconAnchor=iconAnchor)},Marker.prototype.setShadowIcon=function(iconShadowUrl,iconShadowSize){this.iconShadowUrl=iconShadowUrl,iconShadowSize&&(this.iconShadowSize=iconShadowSize)},Marker.prototype.setHoverIcon=function(hoverIconUrl){this.hoverIconUrl=hoverIconUrl},Marker.prototype.setDraggable=function(draggable){this.draggable=draggable},Marker.prototype.setHover=function(hover){this.hover=hover},Marker.prototype.setGroupName=function(sGrpName){this.groupName=sGrpName},Marker.prototype.setAttribute=function(key,value){this.attributes[key]=value},Marker.prototype.getAttribute=function(key){return this.attributes[key]};var Polyline=mxn.Polyline=function(points){this.api=null,this.points=points,this.attributes=[],this.onmap=!1,this.proprietary_polyline=!1,this.pllID="mspll-"+(new Date).getTime()+"-"+Math.floor(Math.random()*Math.pow(2,16)),this.invoker=new mxn.Invoker(this,"Polyline",function(){return this.api})};mxn.addProxyMethods(Polyline,["fromProprietary","hide","show","toProprietary","update"]),Polyline.prototype.addData=function(options){for(var sOpt in options)if(options.hasOwnProperty(sOpt))switch(sOpt){case"color":this.setColor(options.color);break;case"width":this.setWidth(options.width);break;case"opacity":this.setOpacity(options.opacity);break;case"closed":this.setClosed(options.closed);break;case"fillColor":this.setFillColor(options.fillColor);break;default:this.setAttribute(sOpt,options[sOpt])}},Polyline.prototype.setChild=function(some_proprietary_polyline){this.proprietary_polyline=some_proprietary_polyline,this.onmap=!0},Polyline.prototype.setColor=function(color){this.color=color.length==7&&color[0]=="#"?color.toUpperCase():color},Polyline.prototype.setWidth=function(width){this.width=width},Polyline.prototype.setOpacity=function(opacity){this.opacity=opacity},Polyline.prototype.setClosed=function(bClosed){this.closed=bClosed},Polyline.prototype.setFillColor=function(sFillColor){this.fillColor=sFillColor},Polyline.prototype.setAttribute=function(key,value){this.attributes[key]=value},Polyline.prototype.getAttribute=function(key){return this.attributes[key]},Polyline.prototype.simplify=function(tolerance){var reduced=[];reduced[0]=this.points[0];var markerPoint=0;for(var i=1;i<this.points.length-1;i++)this.points[i].distance(this.points[markerPoint])>=tolerance&&(reduced[reduced.length]=this.points[i],markerPoint=i);reduced[reduced.length]=this.points[this.points.length-1],this.points=reduced};var Radius=mxn.Radius=function(center,quality){this.center=center;var latConv=center.latConv(),lonConv=center.lonConv(),rad=Math.PI/180;this.calcs=[];for(var i=0;i<360;i+=quality)this.calcs.push([Math.cos(i*rad)/latConv,Math.sin(i*rad)/lonConv])};Radius.prototype.getPolyline=function(radius,color){var points=[];for(var i=0;i<this.calcs.length;i++){var point=new LatLonPoint(this.center.lat+radius*this.calcs[i][0],this.center.lon+radius*this.calcs[i][1]);points.push(point)}points.push(points[0]);var line=new Polyline(points);return line.setColor(color),line}}(),mxn.register("google",{Mapstraction:{init:function(element,api){var me=this;GMap2?GBrowserIsCompatible()?(this.maps[api]=new GMap2(element),GEvent.addListener(this.maps[api],"click",function(marker,location){marker&&marker.mapstraction_marker?marker.mapstraction_marker.click.fire():location&&me.click.fire({location:new mxn.LatLonPoint(location.y,location.x)}),location&&me.clickHandler(location.y,location.x,location,me)}),GEvent.addListener(this.maps[api],"moveend",function(){me.moveendHandler(me),me.endPan.fire()}),GEvent.addListener(this.maps[api],"zoomend",function(){me.changeZoom.fire()}),this.loaded[api]=!0,me.load.fire()):alert("browser not compatible with Google Maps"):alert(api+" map script not imported")},applyOptions:function(){var map=this.maps[this.api];this.options.enableScrollWheelZoom&&(map.enableContinuousZoom(),map.enableScrollWheelZoom()),this.options.enableDragging?map.enableDragging():map.disableDragging()},resizeTo:function(width,height){this.currentElement.style.width=width,this.currentElement.style.height=height,this.maps[this.api].checkResize()},addControls:function(args){var map=this.maps[this.api];if(this.controls)while(ctl=this.controls.pop())map.removeControl(ctl);else this.controls=[];c=this.controls;if(args.zoom||args.pan)args.zoom=="large"?this.addLargeControls():this.addSmallControls();args.scale&&(this.controls.unshift(new GScaleControl),map.addControl(this.controls[0]),this.addControlsArgs.scale=!0),args.overview&&(c.unshift(new GOverviewMapControl),map.addControl(c[0]),this.addControlsArgs.overview=!0),args.map_type&&this.addMapTypeControls()},addSmallControls:function(){var map=this.maps[this.api];this.controls.unshift(new GSmallMapControl),map.addControl(this.controls[0]),this.addControlsArgs.zoom="small",this.addControlsArgs.pan=!0},addLargeControls:function(){var map=this.maps[this.api];this.controls.unshift(new GLargeMapControl),map.addControl(this.controls[0]),this.addControlsArgs.zoom="large",this.addControlsArgs.pan=!0},addMapTypeControls:function(){var map=this.maps[this.api];this.controls.unshift(new GMapTypeControl),map.addControl(this.controls[0]),this.addControlsArgs.map_type=!0},setCenterAndZoom:function(point,zoom){var map=this.maps[this.api],pt=point.toProprietary(this.api);map.setCenter(pt,zoom)},addMarker:function(marker,old){var map=this.maps[this.api],gpin=marker.toProprietary(this.api);return map.addOverlay(gpin),GEvent.addListener(gpin,"infowindowopen",function(){marker.openInfoBubble.fire()}),GEvent.addListener(gpin,"infowindowclose",function(){marker.closeInfoBubble.fire()}),gpin},removeMarker:function(marker){var map=this.maps[this.api];map.removeOverlay(marker.proprietary_marker)},declutterMarkers:function(opts){throw"Not supported"},addPolyline:function(polyline,old){var map=this.maps[this.api];return gpolyline=polyline.toProprietary(this.api),map.addOverlay(gpolyline),gpolyline},removePolyline:function(polyline){var map=this.maps[this.api];map.removeOverlay(polyline.proprietary_polyline)},getCenter:function(){var map=this.maps[this.api],pt=map.getCenter(),point=new mxn.LatLonPoint(pt.lat(),pt.lng());return point},setCenter:function(point,options){var map=this.maps[this.api],pt=point.toProprietary(this.api);options&&options.pan?map.panTo(pt):map.setCenter(pt)},setZoom:function(zoom){var map=this.maps[this.api];map.setZoom(zoom)},getZoom:function(){var map=this.maps[this.api];return map.getZoom()},getZoomLevelForBoundingBox:function(bbox){var map=this.maps[this.api],ne=bbox.getNorthEast(),sw=bbox.getSouthWest(),gbox=new GLatLngBounds(sw.toProprietary(this.api),ne.toProprietary(this.api)),zoom=map.getBoundsZoomLevel(gbox);return zoom},setMapType:function(type){var map=this.maps[this.api];switch(type){case mxn.Mapstraction.ROAD:map.setMapType(G_NORMAL_MAP);break;case mxn.Mapstraction.SATELLITE:map.setMapType(G_SATELLITE_MAP);break;case mxn.Mapstraction.HYBRID:map.setMapType(G_HYBRID_MAP);break;case mxn.Mapstraction.PHYSICAL:map.setMapType(G_PHYSICAL_MAP);break;default:map.setMapType(type||G_NORMAL_MAP)}},getMapType:function(){var map=this.maps[this.api],type=map.getCurrentMapType();switch(type){case G_NORMAL_MAP:return mxn.Mapstraction.ROAD;case G_SATELLITE_MAP:return mxn.Mapstraction.SATELLITE;case G_HYBRID_MAP:return mxn.Mapstraction.HYBRID;case G_PHYSICAL_MAP:return mxn.Mapstraction.PHYSICAL;default:return null}},getBounds:function(){var map=this.maps[this.api],ne,sw,nw,se,gbox=map.getBounds();return sw=gbox.getSouthWest(),ne=gbox.getNorthEast(),new mxn.BoundingBox(sw.lat(),sw.lng(),ne.lat(),ne.lng())},setBounds:function(bounds){var map=this.maps[this.api],sw=bounds.getSouthWest(),ne=bounds.getNorthEast(),gbounds=new GLatLngBounds(new GLatLng(sw.lat,sw.lon),new GLatLng(ne.lat,ne.lon));map.setCenter(gbounds.getCenter(),map.getBoundsZoomLevel(gbounds))},addImageOverlay:function(id,src,opacity,west,south,east,north,oContext){var map=this.maps[this.api];map.getPane(G_MAP_MAP_PANE).appendChild(oContext.imgElm),this.setImageOpacity(id,opacity),this.setImagePosition(id),GEvent.bind(map,"zoomend",this,function(){this.setImagePosition(id)}),GEvent.bind(map,"moveend",this,function(){this.setImagePosition(id)})},setImagePosition:function(id,oContext){var map=this.maps[this.api],topLeftPoint,bottomRightPoint;topLeftPoint=map.fromLatLngToDivPixel(new GLatLng(oContext.latLng.top,oContext.latLng.left)),bottomRightPoint=map.fromLatLngToDivPixel(new GLatLng(oContext.latLng.bottom,oContext.latLng.right)),oContext.pixels.top=topLeftPoint.y,oContext.pixels.left=topLeftPoint.x,oContext.pixels.bottom=bottomRightPoint.y,oContext.pixels.right=bottomRightPoint.x},addOverlay:function(url,autoCenterAndZoom){var map=this.maps[this.api],geoXML=new GGeoXml(url);map.addOverlay(geoXML,function(){autoCenterAndZoom&&geoXML.gotoDefaultViewport(map)})},addTileLayer:function(tile_url,opacity,copyright_text,min_zoom,max_zoom,map_type){var copyright=new GCopyright(1,new GLatLngBounds(new GLatLng(-90,-180),new GLatLng(90,180)),0,"copyleft"),copyrightCollection=new GCopyrightCollection(copyright_text);copyrightCollection.addCopyright(copyright);var tilelayers=[];tilelayers[0]=new GTileLayer(copyrightCollection,min_zoom,max_zoom),tilelayers[0].isPng=function(){return!0},tilelayers[0].getOpacity=function(){return opacity},tilelayers[0].getTileUrl=function(a,b){return url=tile_url,url=url.replace(/\{Z\}/g,b),url=url.replace(/\{X\}/g,a.x),url=url.replace(/\{Y\}/g,a.y),url};if(map_type){var tileLayerOverlay=new GMapType(tilelayers,new GMercatorProjection(19),copyright_text,{errorMessage:"More "+copyright_text+" tiles coming soon"});this.maps[this.api].addMapType(tileLayerOverlay)}else tileLayerOverlay=new GTileLayerOverlay(tilelayers[0]),this.maps[this.api].addOverlay(tileLayerOverlay);return this.tileLayers.push([tile_url,tileLayerOverlay,!0]),tileLayerOverlay},toggleTileLayer:function(tile_url){for(var f=0;f<this.tileLayers.length;f++)this.tileLayers[f][0]==tile_url&&(this.tileLayers[f][2]?(this.maps[this.api].removeOverlay(this.tileLayers[f][1]),this.tileLayers[f][2]=!1):(this.maps[this.api].addOverlay(this.tileLayers[f][1]),this.tileLayers[f][2]=!0))},getPixelRatio:function(){var map=this.maps[this.api],projection=G_NORMAL_MAP.getProjection(),centerPoint=map.getCenter(),zoom=map.getZoom(),centerPixel=projection.fromLatLngToPixel(centerPoint,zoom),distancePoint=projection.fromPixelToLatLng(new GPoint(centerPixel.x+3,centerPixel.y+4),zoom);return 1e4/distancePoint.distanceFrom(centerPoint)},mousePosition:function(element){var locDisp=document.getElementById(element);if(locDisp!==null){var map=this.maps[this.api];GEvent.addListener(map,"mousemove",function(point){var loc=point.lat().toFixed(4)+" / "+point.lng().toFixed(4);locDisp.innerHTML=loc}),locDisp.innerHTML="0.0000 / 0.0000"}}},LatLonPoint:{toProprietary:function(){return new GLatLng(this.lat,this.lon)},fromProprietary:function(googlePoint){this.lat=googlePoint.lat(),this.lon=googlePoint.lng()}},Marker:{toProprietary:function(){var infoBubble,event_action,infoDiv,div,options={};this.labelText&&(options.title=this.labelText);if(this.iconUrl){var icon=new GIcon(G_DEFAULT_ICON,this.iconUrl);icon.printImage=icon.mozPrintImage=icon.image;if(this.iconSize){icon.iconSize=new GSize(this.iconSize[0],this.iconSize[1]);var anchor;this.iconAnchor?anchor=new GPoint(this.iconAnchor[0],this.iconAnchor[1]):anchor=new GPoint(this.iconSize[0]/2,this.iconSize[1]/2),icon.iconAnchor=anchor}typeof this.iconShadowUrl!="undefined"?(icon.shadow=this.iconShadowUrl,this.iconShadowSize&&(icon.shadowSize=new GSize(this.iconShadowSize[0],this.iconShadowSize[1]))):(icon.shadow="",icon.shadowSize=""),this.transparent&&(icon.transparent=this.transparent),this.imageMap&&(icon.imageMap=this.imageMap),options.icon=icon}this.draggable&&(options.draggable=this.draggable);var gmarker=new GMarker(this.location.toProprietary("google"),options);return this.infoBubble&&(infoBubble=this.infoBubble,this.hover?event_action="mouseover":event_action="click",GEvent.addListener(gmarker,event_action,function(){gmarker.openInfoWindowHtml(infoBubble,{maxWidth:100})})),this.hoverIconUrl&&(GEvent.addListener(gmarker,"mouseover",function(){gmarker.setImage(this.hoverIconUrl)}),GEvent.addListener(gmarker,"mouseout",function(){gmarker.setImage(this.iconUrl)})),this.infoDiv&&(infoDiv=this.infoDiv,div=this.div,this.hover?event_action="mouseover":event_action="click",GEvent.addListener(gmarker,event_action,function(){document.getElementById(div).innerHTML=infoDiv})),gmarker},openBubble:function(){var gpin=this.proprietary_marker;gpin.openInfoWindowHtml(this.infoBubble)},hide:function(){this.proprietary_marker.hide()},show:function(){this.proprietary_marker.show()},update:function(){point=new mxn.LatLonPoint,point.fromProprietary("google",this.proprietary_marker.getPoint()),this.location=point}},Polyline:{toProprietary:function(){var gpoints=[];for(var i=0,length=this.points.length;i<length;i++)gpoints.push(this.points[i].toProprietary("google"));return this.closed||gpoints[0].equals(gpoints[length-1])?new GPolygon(gpoints,this.color,this.width,this.opacity,this.fillColor||"#5462E3",this.opacity||"0.3"):new GPolyline(gpoints,this.color,this.width,this.opacity)},show:function(){throw"Not implemented"},hide:function(){throw"Not implemented"}}})